---
- name: Destroy cloud infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - group_vars/env
    - group_vars/docker.env
  vars:
    ansible_host_key_checking: false
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Get DockerHub authentication token
      uri:
        url: 'https://hub.docker.com/v2/users/login/'
        method: POST
        body_format: json
        body:
          username: '{{ docker_user }}'
          password: '{{ docker_token }}'
      register: auth_response
      when: docker_user is defined and docker_token is defined
      ignore_errors: yes

    - name: Delete DockerHub repository
      uri:
        url: 'https://hub.docker.com/v2/repositories/{{ docker_user }}/math_exercise_app/'
        method: DELETE
        headers:
          Authorization: 'JWT {{ auth_response.json.token }}'
        status_code: [200, 202, 204, 404]
      when: auth_response is succeeded
      ignore_errors: yes

    - name: Terminate EC2 instance
      amazon.aws.ec2_instance:
        instance_ids:
          - '{{ server_id }}'
        region: '{{ aws_region }}'
        state: absent
        wait: yes
      when: server_id is defined

    - name: Delete security group
      amazon.aws.ec2_group:
        name: '{{ vpc_name }} VPC SG'
        region: '{{ aws_region }}'
        vpc_id: '{{ vpc_id }}'
        state: absent
      when: vpc_id is defined and vpc_name is defined

    - name: Disassociate and delete route table
      amazon.aws.ec2_vpc_route_table:
        region: '{{ aws_region }}'
        route_table_id: '{{ route_table_id }}'
        lookup: id
        state: absent
      when: route_table_id is defined

    - name: Detach and delete Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: '{{ vpc_id }}'
        region: '{{ aws_region }}'
        state: absent
      when: vpc_id is defined

    - name: Get subnet info (to retrieve CIDR)
      amazon.aws.ec2_vpc_subnet_info:
        region: '{{ aws_region }}'
        filters:
          subnet-id: '{{ subnet_id }}'
      register: subnet_info
      when: subnet_id is defined

    - name: Delete Subnet (with vpc_id and cidr)
      amazon.aws.ec2_vpc_subnet:
        vpc_id: '{{ vpc_id }}'
        cidr: '{{ subnet_info.subnets[0].cidr_block }}'
        region: '{{ aws_region }}'
        state: absent
      when:
        - subnet_id is defined
        - vpc_id is defined
        - subnet_info is defined
        - subnet_info.subnets | length > 0

    - name: Check if VPC exists
      amazon.aws.ec2_vpc_net_info:
        region: '{{ aws_region }}'
        filters:
          vpc-id: '{{ vpc_id }}'
      register: vpc_check
      when: vpc_id is defined

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        vpc_id: '{{ vpc_id }}'
        region: '{{ aws_region }}'
        state: absent
      when:
        - vpc_id is defined
        - vpc_check.vpcs is defined
        - vpc_check.vpcs | length > 0

    - name: Clean up vars file entries
      ansible.builtin.lineinfile:
        path: group_vars/env
        regexp: '{{ item }}'
        state: absent
      loop:
        - '^vpc_id: '
        - '^subnet_id: '
        - '^igw_id: '
        - '^route_table_id: '
        - '^server_id: '

    - name: Show final message
      debug:
        msg: 'All infrastructure resources have been destroyed and Docker images cleaned up.'
